{"ast":null,"code":"import { LocalStorage } from './LocalStorage';\nconst baseURL = 'http://localhost:8080';\nclass AuthDB {\n  static async Registry(user) {\n    console.log(`${baseURL}/auth/reg/`);\n    return await AuthDB.Request(`${baseURL}/auth/reg/`, 'POST', user);\n  }\n  static async Login(user) {\n    return await AuthDB.Request(`${baseURL}/auth/login/`, 'POST', user);\n  }\n  static async UpdateUserInfo(user) {\n    return await AuthDB.Request(`${baseURL}/auth/users/`, 'POST', user, LocalStorage.GetToken());\n  }\n  static async Redirect() {\n    function changeWindowLocation(location) {\n      let currentLocation = window.location.href.replace('http://localhost:3000', '');\n      if (currentLocation !== location) {\n        window.location.replace(location);\n      }\n    }\n    await AuthDB.Request('/auth/token/', 'GET', null, LocalStorage.GetToken()).then(responseData => {\n      if (responseData === null || responseData['token'] === null) {\n        LocalStorage.SetToken('');\n        return;\n      }\n      LocalStorage.SetToken(responseData['token']);\n      if (responseData['role'] === 'ROLE_USER') changeWindowLocation('/polls/');\n    });\n  }\n  static async Request(url, method = 'GET', bodyObj = null, token = null) {\n    let result = null;\n    let obj = {};\n    obj['method'] = method;\n    obj['headers'] = {};\n    obj['headers']['Content-type'] = 'application/json';\n    if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\n    if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\n    await fetch(url, obj).then(async response => {\n      console.log(response);\n      if (response.ok) await response.json().then(data => {\n        console.log(data);\n        result = data;\n      });else response.text().then(console.log);\n    });\n    return result;\n  }\n}\nexport { AuthDB };","map":{"version":3,"names":["LocalStorage","baseURL","AuthDB","Registry","user","console","log","Request","Login","UpdateUserInfo","GetToken","Redirect","changeWindowLocation","location","currentLocation","window","href","replace","then","responseData","SetToken","url","method","bodyObj","token","result","obj","JSON","stringify","fetch","response","ok","json","data","text"],"sources":["/home/khsdf/tmp/K3/src/hooks/AuthDB.js"],"sourcesContent":["import { LocalStorage }  from './LocalStorage';\r\n\r\nconst baseURL = 'http://localhost:8080';\r\n\r\nclass AuthDB {\r\n\r\n    static async Registry(user) {\r\n        console.log(`${baseURL}/auth/reg/`);\r\n        return await AuthDB.Request(`${baseURL}/auth/reg/`, 'POST', user);\r\n    }\r\n\r\n    static async Login(user) {\r\n        return await AuthDB.Request(`${baseURL}/auth/login/`, 'POST', user);\r\n    }\r\n\r\n    static async UpdateUserInfo(user) {\r\n        return await AuthDB.Request(`${baseURL}/auth/users/`, 'POST', user, LocalStorage.GetToken());\r\n    }\r\n\r\n    static async Redirect() {\r\n\r\n        function changeWindowLocation(location) {\r\n            let currentLocation = window.location.href.replace('http://localhost:3000', '');\r\n            if (currentLocation !== location) {\r\n                window.location.replace(location)\r\n            }\r\n        }\r\n\r\n        await AuthDB.Request('/auth/token/', 'GET', null, LocalStorage.GetToken()).then(responseData => {\r\n            if (responseData === null || responseData['token'] === null) {\r\n                LocalStorage.SetToken('');\r\n                return;\r\n            }\r\n\r\n            LocalStorage.SetToken(responseData['token']);\r\n    \r\n            if (responseData['role'] === 'ROLE_USER')\r\n                changeWindowLocation('/polls/')\r\n        });\r\n        \r\n    }\r\n    \r\n\r\n    static async Request(url, method = 'GET', bodyObj = null, token = null) {\r\n        \r\n        let result = null;\r\n        let obj = {};\r\n\r\n        obj['method'] = method;\r\n        \r\n        obj['headers'] = {};\r\n        obj['headers']['Content-type'] = 'application/json';\r\n\r\n        if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\r\n            \r\n        if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\r\n        \r\n        await fetch(url, obj).then(async (response) => {\r\n            console.log(response)\r\n            if (response.ok)\r\n                await response.json().then(data => {\r\n                    console.log(data);\r\n                    result = data;\r\n                })\r\n            else \r\n                response.text().then(console.log)\r\n        });\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { AuthDB }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}