{"ast":null,"code":"import { LocalDB } from './AuthLocal';\nconst baseURL = 'http://localhost:8080';\nclass DB {\n  static async Registry(user) {\n    console.log(`${baseURL}/auth/reg/`);\n    await DB.Request('http://localhost:8080/auth/reg/', 'POST', {\n      \"login\": 'bebra23',\n      \"password\": '123',\n      \"email\": '1@mail.ru',\n      \"phone\": '+7'\n    });\n    // return await DB.Request(`${baseURL}/auth/reg/`, 'POST', user);\n  }\n  static async Login(user) {\n    return await DB.Request(`${baseURL}/auth/login/`, 'POST', user);\n  }\n  static async Redirect() {\n    function changeWindowLocation(location) {\n      let currentLocation = window.location.href.replace('http://localhost:81', '');\n      if (currentLocation != location) {\n        window.location.replace(location);\n      }\n    }\n    await DB.Request('/auth/token/', 'GET', null, LocalDB.GetToken()).then(responseData => {\n      if (responseData == null || responseData['token'] == null) {\n        LocalDB.SetToken('');\n        return;\n      }\n      LocalDB.SetToken(responseData['token']);\n      if (responseData['role'] == 'ROLE_USER') changeWindowLocation('/mypolls/');\n    });\n  }\n  static async Request(url, method = 'GET', bodyObj = null, token = null) {\n    let result = null;\n    let obj = {};\n    obj['mode'] = 'no-cors';\n    obj['method'] = method;\n    obj['headers'] = {};\n    obj['headers']['Content-type'] = 'application/json';\n    obj['headers']['Accept'] = 'application/json, text/plain';\n    if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\n    if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\n    if (bodyObj) console.log(obj);\n    await fetch(url, obj).then(async response => {\n      console.log(response);\n      if (response.ok) await response.json().then(data => {\n        console.log(data);\n        result = data;\n      });else response.text().then(console.log);\n    });\n    return result;\n  }\n}\nexport { DB };","map":{"version":3,"names":["LocalDB","baseURL","DB","Registry","user","console","log","Request","Login","Redirect","changeWindowLocation","location","currentLocation","window","href","replace","GetToken","then","responseData","SetToken","url","method","bodyObj","token","result","obj","JSON","stringify","fetch","response","ok","json","data","text"],"sources":["/home/khsdf/tmp/K3/src/authorize/scripts/AuthDB.js"],"sourcesContent":["import { LocalDB }  from './AuthLocal';\r\n\r\nconst baseURL = 'http://localhost:8080';\r\n\r\nclass DB {\r\n\r\n    static async Registry(user) {\r\n        console.log(`${baseURL}/auth/reg/`);\r\n        (await DB.Request('http://localhost:8080/auth/reg/', 'POST', {\r\n                \"login\": 'bebra23',\r\n                \"password\": '123',\r\n                \"email\": '1@mail.ru',\r\n                \"phone\": '+7'\r\n        }))\r\n        // return await DB.Request(`${baseURL}/auth/reg/`, 'POST', user);\r\n    }\r\n\r\n    static async Login(user) {\r\n        return await DB.Request(`${baseURL}/auth/login/`, 'POST', user);\r\n    }\r\n\r\n    static async Redirect() {\r\n\r\n        function changeWindowLocation(location) {\r\n            let currentLocation = window.location.href.replace('http://localhost:81', '');\r\n            if (currentLocation != location) {\r\n                window.location.replace(location)\r\n            }\r\n        }\r\n\r\n        await DB.Request('/auth/token/', 'GET', null, LocalDB.GetToken()).then(responseData => {\r\n            if (responseData == null || responseData['token'] == null) {\r\n                LocalDB.SetToken('');\r\n                return;\r\n            }\r\n\r\n            LocalDB.SetToken(responseData['token']);\r\n    \r\n            if (responseData['role'] == 'ROLE_USER')\r\n                changeWindowLocation('/mypolls/')\r\n        });\r\n        \r\n    }\r\n    \r\n\r\n    static async Request(url, method = 'GET', bodyObj = null, token = null) {\r\n        \r\n        let result = null;\r\n        let obj = {};\r\n\r\n        obj['mode'] = 'no-cors';\r\n        obj['method'] = method;\r\n        \r\n        obj['headers'] = {};\r\n        obj['headers']['Content-type'] = 'application/json';\r\n        obj['headers']['Accept'] = 'application/json, text/plain';\r\n        if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\r\n            \r\n        if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\r\n\r\n        if (bodyObj) console.log(obj)\r\n        \r\n        await fetch(url, obj).then(async (response) => {\r\n            console.log(response)\r\n            if (response.ok)\r\n                await response.json().then(data => {\r\n                    console.log(data);\r\n                    result = data;\r\n                })\r\n            else \r\n                response.text().then(console.log)\r\n        });\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { DB }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}