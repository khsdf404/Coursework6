{"ast":null,"code":"var _jsxFileName = \"/home/khsdf/tmp/K3/src/reply/Reply.jsx\";\nimport React from 'react';\nimport { ReplyDB } from '../hooks/ReplyDB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Reply extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      poll: []\n    };\n    ReplyDB.GetPoll(this.props.link).then(result => {\n      this.setState({\n        poll: result\n      });\n    });\n  }\n  render() {\n    let questions = '';\n    if (this.state.poll && this.state.poll.questions) questions = this.state.poll.questions;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"replyPollView\",\n      children: [questions.split('|').map((question, i) => {\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"question-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\u041E\\u0442\\u0432\\u0435\\u0442: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 7\n          }, this)]\n        }, ++i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this);\n      }) || /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reply-btn\",\n        id: \"postReplyBtn\",\n        onClick: () => {\n          let answers = '';\n          let $answers = document.getElementsByTagName('input');\n          for (let i = 0; i < $answers.length; i++) answers += $answers[i].value + '|';\n          answers = answers.replace(/(\\|)$/g, '');\n          let replyObj = {\n            pollLink: this.props.link,\n            answers: answers\n          };\n          ReplyDB.PostReply(replyObj).then(result => {\n            this.props.ShowReplyView(result['link']);\n          });\n        },\n        children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this);\n  }\n}\nexport { Reply };","map":{"version":3,"names":["React","ReplyDB","jsxDEV","_jsxDEV","Fragment","_Fragment","Reply","Component","constructor","props","state","poll","GetPoll","link","then","result","setState","render","questions","id","children","split","map","question","i","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","answers","$answers","document","getElementsByTagName","length","value","replace","replyObj","pollLink","PostReply","ShowReplyView"],"sources":["/home/khsdf/tmp/K3/src/reply/Reply.jsx"],"sourcesContent":["import React from 'react';\nimport { ReplyDB } from '../hooks/ReplyDB';\n\n\nclass Reply extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tpoll: []\n\t\t}\n\n\t\tReplyDB.GetPoll(this.props.link).then(result => {\n\t\t\tthis.setState({ poll: result })\n\t\t});\n\t}\n\n\trender() {\n\t\tlet questions = '';\n\t\tif (this.state.poll && this.state.poll.questions)\n\t\t\tquestions = this.state.poll.questions;\n\t\treturn <section id=\"replyPollView\">\n\t\t\t{\n\t\t\t\tquestions.split('|').map((question, i) => {\n\t\t\t\t\treturn <article className=\"question-form\" key={++i}>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<div>{question}</div>\n\t\t\t\t\t\t</section>\n\t\t\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<div>Ответ: </div>\n\t\t\t\t\t\t\t<input />\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</article>\n\t\t\t\t}) || <></>\n\t\t\t}\n\t\t\t<button className=\"reply-btn\" id=\"postReplyBtn\" onClick={() => {\n\t\t\t\tlet answers = '';\n\n\t\t\t\tlet $answers = document.getElementsByTagName('input');\n\t\t\t\tfor (let i = 0; i < $answers.length; i++)\n\t\t\t\t\tanswers += $answers[i].value + '|';\n\n\t\t\t\tanswers = answers.replace(/(\\|)$/g, '');\n\t\t\n\t\t\t\tlet replyObj = {\n\t\t\t\t\tpollLink: this.props.link,\n\t\t\t\t\tanswers: answers\n\t\t\t\t};\n\t\t\n\t\t\t\tReplyDB.PostReply(replyObj).then(result => {\n\t\t\t\t\tthis.props.ShowReplyView(result['link']);\n\t\t\t\t});\n\t\t\t}}>Завершить</button>\n\t\t</section>\n\t}\n}\nexport { Reply };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}