{"ast":null,"code":"const log = console.log.bind(document);\nif (!localStorage['token']) {\n  localStorage['token'] = JSON.stringify({});\n}\nclass LocalDB {\n  static GetToken() {\n    return localStorage['token'];\n  }\n  static SetToken(token) {\n    localStorage['token'] = token;\n    LocalDB.Print();\n  }\n  static Print() {\n    log({\n      Local: LocalDB.GetToken()\n    });\n  }\n}\nclass DB {\n  static async Registry(user) {\n    return await DB.Request(`/auth/reg/`, 'POST', user);\n  }\n  static async Login(user) {\n    return await DB.Request(`/auth/login/`, 'POST', user);\n  }\n  static async Redirect() {\n    function changeWindowLocation(location) {\n      let currentLocation = window.location.href.replace('http://localhost:81', '');\n      if (currentLocation != location) {\n        window.location.replace(location);\n      }\n    }\n    await DB.Request('/auth/token/', 'GET', null, LocalDB.GetToken()).then(responseData => {\n      if (responseData == null || responseData['token'] == null) {\n        LocalDB.SetToken('');\n        return;\n      }\n      LocalDB.SetToken(responseData['token']);\n      if (responseData['role'] == 'ROLE_USER') changeWindowLocation('/mypolls/');\n    });\n  }\n  static async Request(url, method = 'GET', bodyObj = null, token = null) {\n    let result = null;\n    let obj = {};\n    obj['method'] = method;\n    obj['headers'] = {};\n    obj['headers']['Content-type'] = 'application/json';\n    if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\n    if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\n    await fetch(url, obj).then(async response => {\n      console.log(response);\n      if (response.ok) await response.json().then(data => {\n        console.log(data);\n        result = data;\n      });else response.text().then(console.log);\n    });\n    return result;\n  }\n}","map":{"version":3,"names":["log","console","bind","document","localStorage","JSON","stringify","LocalDB","GetToken","SetToken","token","Print","Local","DB","Registry","user","Request","Login","Redirect","changeWindowLocation","location","currentLocation","window","href","replace","then","responseData","url","method","bodyObj","result","obj","fetch","response","ok","json","data","text"],"sources":["C:/Users/khsdf/Desktop/РКСП + К/rksp/pr1/src/authorize/scripts/DB.js"],"sourcesContent":["\r\nconst log = console.log.bind(document);\r\nif (!localStorage['token']) {\r\n    localStorage['token'] = JSON.stringify({});\r\n}\r\n\r\nclass LocalDB {\r\n\r\n    static GetToken() {\r\n        return localStorage['token'];\r\n    }\r\n    static SetToken(token) {\r\n        localStorage['token'] = token;\r\n        LocalDB.Print()\r\n    }\r\n\r\n\r\n    static Print() {\r\n        log({Local: LocalDB.GetToken()})\r\n    }\r\n}\r\n\r\n\r\n\r\nclass DB {\r\n\r\n    static async Registry(user) {\r\n        return await DB.Request(`/auth/reg/`, 'POST', user);\r\n    }\r\n\r\n    static async Login(user) {\r\n        return await DB.Request(`/auth/login/`, 'POST', user);\r\n    }\r\n\r\n    static async Redirect() {\r\n\r\n        function changeWindowLocation(location) {\r\n            let currentLocation = window.location.href.replace('http://localhost:81', '');\r\n            if (currentLocation != location) {\r\n                window.location.replace(location)\r\n            }\r\n        }\r\n\r\n        await DB.Request('/auth/token/', 'GET', null, LocalDB.GetToken()).then(responseData => {\r\n            if (responseData == null || responseData['token'] == null) {\r\n                LocalDB.SetToken('');\r\n                return;\r\n            }\r\n\r\n            LocalDB.SetToken(responseData['token']);\r\n    \r\n            if (responseData['role'] == 'ROLE_USER')\r\n                changeWindowLocation('/mypolls/')\r\n        });\r\n        \r\n    }\r\n    \r\n\r\n    static async Request(url, method = 'GET', bodyObj = null, token = null) {\r\n        \r\n        let result = null;\r\n        let obj = {};\r\n\r\n        obj['method'] = method;\r\n        \r\n        obj['headers'] = {};\r\n        obj['headers']['Content-type'] = 'application/json';\r\n        if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\r\n            \r\n        if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\r\n        \r\n        await fetch(url, obj).then(async (response) => {\r\n            console.log(response)\r\n            if (response.ok)\r\n                await response.json().then(data => {\r\n                    console.log(data);\r\n                    result = data;\r\n                })\r\n            else \r\n                response.text().then(console.log)\r\n        });\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}