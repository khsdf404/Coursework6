{"ast":null,"code":"// DB.Request(`http://localhost:81/api/polls/public/62696261d09ed0bfd180d0bed18120233131323032332d31322d32345431313a33393a32392e3739345a/`, \n// 'GET', null, LocalDB.GetToken());\n\nimport { LocalDB } from './AuthLocal';\nconst baseURL = 'http://localhost:8080';\nclass DB {\n  static async GetUserdata() {\n    await DB.CheckToken();\n    return await DB.Request('/auth/users/', 'GET', null, LocalDB.GetToken());\n  }\n  static async PostUserdata(obj) {\n    await DB.CheckToken();\n    return await DB.Request('/auth/users/', 'PUT', obj, LocalDB.GetToken());\n  }\n  static async DeletePoll(link) {\n    await DB.CheckToken();\n    return await DB.Request(`/api/polls/${link}/`, 'DELETE', null, LocalDB.GetToken());\n  }\n  static async PostPoll(obj) {\n    await DB.CheckToken();\n    return await DB.Request('/api/polls/', 'POST', obj, LocalDB.GetToken());\n  }\n  static async GetUserPolls() {\n    await DB.CheckToken();\n    return await DB.Request('/api/polls/all/', 'GET', null, LocalDB.GetToken());\n  }\n  static async CheckToken() {\n    let tokenObj = await DB.Request('/auth/token/', 'GET', null, LocalDB.GetToken());\n    if (tokenObj['token'] == null) {\n      window.location.replace('/');\n      return;\n    }\n    LocalDB.SetToken(tokenObj['token']);\n  }\n  static async Request(url, method = 'GET', bodyObj = null, token = null) {\n    let result = null;\n    let obj = {};\n    obj['method'] = method;\n    obj['headers'] = {};\n    obj['headers']['Content-type'] = 'application/json';\n    if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\n    if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\n    await fetch(url, obj).then(async response => {\n      console.log(response);\n      if (response.ok) await response.json().then(data => {\n        console.log(data);\n        result = data;\n      });else response.text().then(console.log);\n    });\n    return result;\n  }\n}","map":{"version":3,"names":["LocalDB","baseURL","DB","GetUserdata","CheckToken","Request","GetToken","PostUserdata","obj","DeletePoll","link","PostPoll","GetUserPolls","tokenObj","window","location","replace","SetToken","url","method","bodyObj","token","result","JSON","stringify","fetch","then","response","console","log","ok","json","data","text"],"sources":["/home/khsdf/tmp/K3/src/polls/scripts/DB.js"],"sourcesContent":["// DB.Request(`http://localhost:81/api/polls/public/62696261d09ed0bfd180d0bed18120233131323032332d31322d32345431313a33393a32392e3739345a/`, \r\n// 'GET', null, LocalDB.GetToken());\r\n\r\nimport { LocalDB }  from './AuthLocal';\r\n\r\nconst baseURL = 'http://localhost:8080';\r\n\r\nclass DB {\r\n\r\n    static async GetUserdata() {\r\n        await DB.CheckToken();\r\n        return await DB.Request('/auth/users/', 'GET', null, LocalDB.GetToken());\r\n    }\r\n\r\n    static async PostUserdata(obj) {\r\n        await DB.CheckToken();\r\n        return await DB.Request('/auth/users/', 'PUT', obj, LocalDB.GetToken());\r\n    }\r\n\r\n    static async DeletePoll(link) {\r\n        await DB.CheckToken();\r\n        return await DB.Request(`/api/polls/${link}/`, 'DELETE', null, LocalDB.GetToken());\r\n    }\r\n    static async PostPoll(obj) {\r\n        await DB.CheckToken();\r\n        return await DB.Request('/api/polls/', 'POST', obj, LocalDB.GetToken());\r\n    }\r\n\r\n    static async GetUserPolls() {\r\n        await DB.CheckToken();\r\n        return await DB.Request('/api/polls/all/', 'GET', null, LocalDB.GetToken());\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    static async CheckToken() {\r\n        let tokenObj = await DB.Request('/auth/token/', 'GET', null, LocalDB.GetToken());\r\n        if (tokenObj['token'] == null) {\r\n            window.location.replace('/');\r\n            return;\r\n        }\r\n        LocalDB.SetToken(tokenObj['token']);\r\n    }\r\n    static async Request(url, method = 'GET', bodyObj = null, token = null) {\r\n        \r\n        let result = null;\r\n        let obj = {};\r\n\r\n        obj['method'] = method;\r\n        \r\n        obj['headers'] = {};\r\n        obj['headers']['Content-type'] = 'application/json';\r\n        if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\r\n            \r\n        if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\r\n        \r\n        await fetch(url, obj).then(async (response) => {\r\n            console.log(response)\r\n            if (response.ok)\r\n                await response.json().then(data => {\r\n                    console.log(data);\r\n                    result = data;\r\n                })\r\n            else \r\n                response.text().then(console.log)\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n} "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}