{"ast":null,"code":"const baseURL = 'http://localhost:8080';\nclass DB {\n  static async GetReply(link) {\n    let obj = {};\n    let reply = await DB.Request(`${baseURL}/api/reply/${link}/`);\n    obj['answers'] = reply.answers;\n    console.log(reply);\n    let poll = await DB.Request(`${baseURL}/api/polls/public/${reply.pollLink}/`);\n    obj['questions'] = poll.questions;\n    return obj;\n  }\n  static async GetPoll(link) {\n    return await DB.Request(`${baseURL}/api/polls/public/${link}/`);\n  }\n  static async PostReply(obj) {\n    return await DB.Request(`${baseURL}/api/reply/`, 'POST', obj);\n  }\n  static async Request(url, method = 'GET', bodyObj = null, token = null) {\n    let result = null;\n    let obj = {};\n    obj['method'] = method;\n    obj['headers'] = {};\n    obj['headers']['Content-type'] = 'application/json';\n    if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\n    if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\n    await fetch(url, obj).then(async response => {\n      console.log(response);\n      if (response.ok) await response.json().then(data => {\n        console.log(data);\n        result = data;\n      });else response.text().then(console.log);\n    });\n    return result;\n  }\n}\nexport { DB };","map":{"version":3,"names":["baseURL","DB","GetReply","link","obj","reply","Request","answers","console","log","poll","pollLink","questions","GetPoll","PostReply","url","method","bodyObj","token","result","JSON","stringify","fetch","then","response","ok","json","data","text"],"sources":["/home/khsdf/tmp/K3/src/reply/scripts/ApiDB.js"],"sourcesContent":["const baseURL = 'http://localhost:8080';\r\n\r\nclass DB {\r\n\r\n    static async GetReply(link) {\r\n        let obj = {};\r\n\r\n        let reply = await DB.Request(`${baseURL}/api/reply/${link}/`);\r\n        obj['answers'] = reply.answers;\r\n\r\n        console.log(reply)\r\n\r\n        let poll = await DB.Request(`${baseURL}/api/polls/public/${reply.pollLink}/`);\r\n        obj['questions'] = poll.questions;\r\n\r\n        return obj;\r\n    }\r\n\r\n    static async GetPoll(link) {\r\n        return await DB.Request(`${baseURL}/api/polls/public/${link}/`);\r\n    }\r\n\r\n    static async PostReply(obj) {\r\n        return await DB.Request(`${baseURL}/api/reply/`, 'POST', obj);\r\n    }\r\n    \r\n    static async Request(url, method = 'GET', bodyObj = null, token = null) {\r\n        \r\n        let result = null;\r\n        let obj = {};\r\n\r\n        obj['method'] = method;\r\n        \r\n        obj['headers'] = {};\r\n        obj['headers']['Content-type'] = 'application/json';\r\n        if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\r\n            \r\n        if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\r\n        \r\n        await fetch(url, obj).then(async (response) => {\r\n            console.log(response)\r\n            if (response.ok)\r\n                await response.json().then(data => {\r\n                    console.log(data);\r\n                    result = data;\r\n                })\r\n            else \r\n                response.text().then(console.log)\r\n        });\r\n\r\n        return result;\r\n    }\r\n} \r\n\r\nexport { DB };"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,EAAE,CAAC;EAEL,aAAaC,QAAQA,CAACC,IAAI,EAAE;IACxB,IAAIC,GAAG,GAAG,CAAC,CAAC;IAEZ,IAAIC,KAAK,GAAG,MAAMJ,EAAE,CAACK,OAAO,CAAE,GAAEN,OAAQ,cAAaG,IAAK,GAAE,CAAC;IAC7DC,GAAG,CAAC,SAAS,CAAC,GAAGC,KAAK,CAACE,OAAO;IAE9BC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAElB,IAAIK,IAAI,GAAG,MAAMT,EAAE,CAACK,OAAO,CAAE,GAAEN,OAAQ,qBAAoBK,KAAK,CAACM,QAAS,GAAE,CAAC;IAC7EP,GAAG,CAAC,WAAW,CAAC,GAAGM,IAAI,CAACE,SAAS;IAEjC,OAAOR,GAAG;EACd;EAEA,aAAaS,OAAOA,CAACV,IAAI,EAAE;IACvB,OAAO,MAAMF,EAAE,CAACK,OAAO,CAAE,GAAEN,OAAQ,qBAAoBG,IAAK,GAAE,CAAC;EACnE;EAEA,aAAaW,SAASA,CAACV,GAAG,EAAE;IACxB,OAAO,MAAMH,EAAE,CAACK,OAAO,CAAE,GAAEN,OAAQ,aAAY,EAAE,MAAM,EAAEI,GAAG,CAAC;EACjE;EAEA,aAAaE,OAAOA,CAACS,GAAG,EAAEC,MAAM,GAAG,KAAK,EAAEC,OAAO,GAAG,IAAI,EAAEC,KAAK,GAAG,IAAI,EAAE;IAEpE,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAIf,GAAG,GAAG,CAAC,CAAC;IAEZA,GAAG,CAAC,QAAQ,CAAC,GAAGY,MAAM;IAEtBZ,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACnBA,GAAG,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,GAAG,kBAAkB;IACnD,IAAIc,KAAK,EAAEd,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,CAAC,GAAI,UAASc,KAAM,EAAC;IAE9D,IAAID,OAAO,EAAEb,GAAG,CAAC,MAAM,CAAC,GAAGgB,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;IAElD,MAAMK,KAAK,CAACP,GAAG,EAAEX,GAAG,CAAC,CAACmB,IAAI,CAAC,MAAOC,QAAQ,IAAK;MAC3ChB,OAAO,CAACC,GAAG,CAACe,QAAQ,CAAC;MACrB,IAAIA,QAAQ,CAACC,EAAE,EACX,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAACI,IAAI,IAAI;QAC/BnB,OAAO,CAACC,GAAG,CAACkB,IAAI,CAAC;QACjBR,MAAM,GAAGQ,IAAI;MACjB,CAAC,CAAC,MAEFH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACL,IAAI,CAACf,OAAO,CAACC,GAAG,CAAC;IACzC,CAAC,CAAC;IAEF,OAAOU,MAAM;EACjB;AACJ;AAEA,SAASlB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}