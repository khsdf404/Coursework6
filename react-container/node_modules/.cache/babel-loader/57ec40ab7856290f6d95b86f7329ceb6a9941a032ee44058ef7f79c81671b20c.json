{"ast":null,"code":"var _jsxFileName = \"/home/khsdf/tmp/K3/src/reply/ReplyView.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { Header } from '../components/Header';\nimport { DB } from './scripts/ApiDB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReplyView = props => {\n  _s();\n  const {\n    link\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(ReplyComponent, {\n    link: link\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(ReplyView, \"1cPkfQu5/6Yclyv8+v49UBFCcD0=\", false, function () {\n  return [useParams];\n});\n_c = ReplyView;\nclass ReplyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      replies: []\n    };\n    DB.GetReply(this.props.link).then(result => {\n      console.log(result);\n      this.setState({\n        replies: result\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          id: \"views\",\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            id: \"replyPollView\",\n            children: [questions.split('|').map((question, i) => {\n              return /*#__PURE__*/_jsxDEV(\"article\", {\n                className: \"question-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"section\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: question\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 10\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"\\u041E\\u0442\\u0432\\u0435\\u0442: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 10\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 10\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 9\n                }, this)]\n              }, ++i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 15\n              }, this);\n            }) || /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"postReplyBtn\",\n              onClick: () => {\n                let answers = '';\n                let $answers = document.getElementsByTagName('input');\n                for (let i = 0; i < $answers.length; i++) answers += $answers[i].value + '|';\n                answers = answers.replace(/(\\|)$/g, '');\n                let replyObj = {\n                  pollLink: this.props.link,\n                  answers: answers\n                };\n                DB.PostReply(replyObj).then(result => {\n                  window.location.replace(`http://localhost:3000/replyView/${result['link']}`);\n                });\n              },\n              children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport { ReplyView };\nvar _c;\n$RefreshReg$(_c, \"ReplyView\");","map":{"version":3,"names":["React","useParams","Header","DB","jsxDEV","_jsxDEV","Fragment","_Fragment","ReplyView","props","_s","link","ReplyComponent","fileName","_jsxFileName","lineNumber","columnNumber","_c","Component","constructor","state","replies","GetReply","then","result","console","log","setState","render","children","id","questions","split","map","question","i","className","onClick","answers","$answers","document","getElementsByTagName","length","value","replace","replyObj","pollLink","PostReply","window","location","$RefreshReg$"],"sources":["/home/khsdf/tmp/K3/src/reply/ReplyView.jsx"],"sourcesContent":["import React from 'react';\n\nimport { useParams } from \"react-router-dom\";\nimport { Header } from '../components/Header';\nimport { DB } from './scripts/ApiDB';\n\n\nconst ReplyView = (props) => { \n\n\tconst { link } = useParams();\n\n\treturn <ReplyComponent link={link}/>\n}\n\n\nclass ReplyComponent extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\treplies: []\n\t\t}\n\n\t\tDB.GetReply(this.props.link).then(result => {\n\t\t\tconsole.log(result)\n\t\t\tthis.setState({ replies: result })\n\t\t});\n\t}\n\n\trender() {\n\t\treturn <>\n\t\t\t<Header />\n\t\t\t<aside></aside>\n\t\t\t<main>\n\t\t\t\t<article id=\"views\">\n\t\t\t\t\t<section id=\"replyPollView\">\n\t\t\t\t\t{\n\t\t\t\t\t\tquestions.split('|').map((question, i) => {\n\t\t\t\t\t\t\treturn <article className=\"question-form\" key={++i}>\n\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t<div>{question}</div>\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\n\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t<div>Ответ: </div>\n\t\t\t\t\t\t\t\t\t<input />\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t}) || <></>\n\t\t\t\t\t}\n\t\t\t\t\t<button id=\"postReplyBtn\" onClick={() => {\n\t\t\t\t\t\tlet answers = '';\n\n\t\t\t\t\t\tlet $answers = document.getElementsByTagName('input');\n\t\t\t\t\t\tfor (let i = 0; i < $answers.length; i++)\n\t\t\t\t\t\t\tanswers += $answers[i].value + '|';\n\n\t\t\t\t\t\tanswers = answers.replace(/(\\|)$/g, '');\n\t\t\t\t\n\t\t\t\t\t\tlet replyObj = {\n\t\t\t\t\t\t\tpollLink: this.props.link,\n\t\t\t\t\t\t\tanswers: answers\n\t\t\t\t\t\t};\n\t\t\t\t\n\t\t\t\t\t\tDB.PostReply(replyObj).then(result => {\n\t\t\t\t\t\t\twindow.location.replace(`http://localhost:3000/replyView/${result['link']}`)\n\t\t\t\t\t\t});\n\t\t\t\t\t}}>Завершить</button>\n\t\t\t\t\t</section>\n\t\t\t\t</article>\n\t\t\t</main>\n\t\t</>\n\t}\n}\nexport { ReplyView };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}