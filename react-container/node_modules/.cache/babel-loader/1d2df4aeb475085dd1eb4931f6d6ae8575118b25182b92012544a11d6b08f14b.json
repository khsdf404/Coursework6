{"ast":null,"code":"var _jsxFileName = \"/home/khsdf/tmp/K3/src/authorize/AuthButton.jsx\";\nimport React from 'react';\nimport './styles/auth-button.css';\nimport { $jsf } from '../JSF';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AuthButton extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.inputs = {};\n  }\n  componentDidMount() {\n    this.inputs['name'] = $jsf(`#username`);\n    this.inputs['password'] = $jsf(`#password`);\n    this.inputs['email'] = $jsf(`#email`);\n    this.inputs['phone'] = $jsf(`#phone`);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"authorization-confirm\",\n      onClick: async () => {\n        let user = {\n          login: this.inputs['name'].value(),\n          password: $passInput.value(),\n          email: $emailInput.value(),\n          phone: $phoneInput.value()\n        };\n        let responseData;\n        log(responseData);\n        if ($btn.text() == \"CREATE ACCOUNT\") responseData = await DB.Registry(user);else responseData = await DB.Login(user);\n        if (responseData != null) {\n          LocalDB.SetToken(responseData['token']);\n          if (responseData['role'] == 'ROLE_USER') window.location.replace('/mypolls/');\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"123123\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this);\n  }\n}\nexport { AuthButton };","map":{"version":3,"names":["React","$jsf","Link","jsxDEV","_jsxDEV","AuthButton","Component","constructor","args","inputs","componentDidMount","render","className","onClick","user","login","value","password","$passInput","email","$emailInput","phone","$phoneInput","responseData","log","$btn","text","DB","Registry","Login","LocalDB","SetToken","window","location","replace","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/khsdf/tmp/K3/src/authorize/AuthButton.jsx"],"sourcesContent":["import React from 'react';\r\nimport './styles/auth-button.css';\r\nimport { $jsf } from '../JSF';\r\nimport { Link} from 'react-router-dom';\r\n\r\nclass AuthButton extends React.Component {\r\n\r\n    inputs = {};\r\n\r\n    componentDidMount() {\r\n        this.inputs['name'] = $jsf(`#username`);\r\n        this.inputs['password'] = $jsf(`#password`);\r\n        this.inputs['email'] = $jsf(`#email`);\r\n        this.inputs['phone'] = $jsf(`#phone`);\r\n    }\r\n\r\n\trender() {\r\n\t\treturn <section className='authorization-confirm' onClick={async () => {\r\n            let user = {\r\n                login: this.inputs['name'].value(),\r\n                password: $passInput.value(),\r\n                email: $emailInput.value(),\r\n                phone: $phoneInput.value()\r\n            }\r\n    \r\n            let responseData;\r\n            log(responseData)\r\n    \r\n            if ($btn.text() == \"CREATE ACCOUNT\")\r\n                responseData = await DB.Registry(user);\r\n            else\r\n                responseData = await DB.Login(user);\r\n    \r\n    \r\n            if (responseData != null) {\r\n                LocalDB.SetToken(responseData['token']);\r\n                \r\n                if (responseData['role'] == 'ROLE_USER')\r\n                    window.location.replace('/mypolls/')\r\n            }\r\n        }}>\r\n            <div>123123</div>\r\n            {/* <Link to='/polls/'>{this.props.showRegFields ? 'CREATE ACCOUNT' : 'CONTINUE'}</Link> */}\r\n        </section>\r\n\t}\r\n}\r\nexport { AuthButton };\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AACjC,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,IAAI,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,SAASL,KAAK,CAACM,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAErCC,MAAM,GAAG,CAAC,CAAC;EAAA;EAEXC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACD,MAAM,CAAC,MAAM,CAAC,GAAGR,IAAI,CAAE,WAAU,CAAC;IACvC,IAAI,CAACQ,MAAM,CAAC,UAAU,CAAC,GAAGR,IAAI,CAAE,WAAU,CAAC;IAC3C,IAAI,CAACQ,MAAM,CAAC,OAAO,CAAC,GAAGR,IAAI,CAAE,QAAO,CAAC;IACrC,IAAI,CAACQ,MAAM,CAAC,OAAO,CAAC,GAAGR,IAAI,CAAE,QAAO,CAAC;EACzC;EAEHU,MAAMA,CAAA,EAAG;IACR,oBAAOP,OAAA;MAASQ,SAAS,EAAC,uBAAuB;MAACC,OAAO,EAAE,MAAAA,CAAA,KAAY;QAC7D,IAAIC,IAAI,GAAG;UACPC,KAAK,EAAE,IAAI,CAACN,MAAM,CAAC,MAAM,CAAC,CAACO,KAAK,CAAC,CAAC;UAClCC,QAAQ,EAAEC,UAAU,CAACF,KAAK,CAAC,CAAC;UAC5BG,KAAK,EAAEC,WAAW,CAACJ,KAAK,CAAC,CAAC;UAC1BK,KAAK,EAAEC,WAAW,CAACN,KAAK,CAAC;QAC7B,CAAC;QAED,IAAIO,YAAY;QAChBC,GAAG,CAACD,YAAY,CAAC;QAEjB,IAAIE,IAAI,CAACC,IAAI,CAAC,CAAC,IAAI,gBAAgB,EAC/BH,YAAY,GAAG,MAAMI,EAAE,CAACC,QAAQ,CAACd,IAAI,CAAC,CAAC,KAEvCS,YAAY,GAAG,MAAMI,EAAE,CAACE,KAAK,CAACf,IAAI,CAAC;QAGvC,IAAIS,YAAY,IAAI,IAAI,EAAE;UACtBO,OAAO,CAACC,QAAQ,CAACR,YAAY,CAAC,OAAO,CAAC,CAAC;UAEvC,IAAIA,YAAY,CAAC,MAAM,CAAC,IAAI,WAAW,EACnCS,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,WAAW,CAAC;QAC5C;MACJ,CAAE;MAAAC,QAAA,eACE/B,OAAA;QAAA+B,QAAA,EAAK;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CAAC;EACjB;AACD;AACA,SAASlC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}