{"ast":null,"code":"import { LocalStorage } from './LocalStorage';\nconst baseURL = 'http://localhost:8080';\nclass PollsDB {\n  static async GetUserdata() {\n    // await DB.CheckToken();\n    return await DB.Request('/auth/users/', 'GET', null, LocalStorage.GetToken());\n  }\n  static async PostUserdata(obj) {\n    // await DB.CheckToken();\n    return await DB.Request('/auth/users/', 'PUT', obj, LocalStorage.GetToken());\n  }\n  static async DeletePoll(link) {\n    // await DB.CheckToken();\n    return await DB.Request(`${baseURL}/api/polls/${link}/`, 'DELETE', null, LocalStorage.GetToken());\n  }\n  static async PostPoll(obj) {\n    // await DB.CheckToken();\n    console.log(LocalStorage.GetToken());\n    return await DB.Request(`${baseURL}/api/polls/`, 'POST', obj, LocalStorage.GetToken());\n  }\n  static async GetUserPolls() {\n    // await DB.CheckToken();\n    return await DB.Request(`${baseURL}/api/polls/all/`, 'GET', null, LocalStorage.GetToken());\n  }\n  static async CheckToken() {\n    let tokenObj = await DB.Request('/auth/token/', 'GET', null, LocalStorage.GetToken());\n    if (tokenObj['token'] == null) {\n      window.location.replace('/');\n      return;\n    }\n    LocalStorage.SetToken(tokenObj['token']);\n  }\n  static async Request(url, method = 'GET', bodyObj = null, token = null) {\n    let result = null;\n    let obj = {};\n    obj['method'] = method;\n    obj['headers'] = {};\n    obj['headers']['Content-type'] = 'application/json';\n    if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\n    if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\n    await fetch(url, obj).then(async response => {\n      console.log(response);\n      if (response.ok) await response.json().then(data => {\n        console.log(data);\n        result = data;\n      });else response.text().then(console.log);\n    });\n    return result;\n  }\n}\nexport { PollsDB };","map":{"version":3,"names":["LocalStorage","baseURL","PollsDB","GetUserdata","DB","Request","GetToken","PostUserdata","obj","DeletePoll","link","PostPoll","console","log","GetUserPolls","CheckToken","tokenObj","window","location","replace","SetToken","url","method","bodyObj","token","result","JSON","stringify","fetch","then","response","ok","json","data","text"],"sources":["/home/khsdf/tmp/K3/src/hooks/PollsDB.js"],"sourcesContent":["import { LocalStorage } from './LocalStorage';\r\n\r\nconst baseURL = 'http://localhost:8080';\r\n\r\nclass PollsDB {\r\n\r\n    static async GetUserdata() {\r\n        // await DB.CheckToken();\r\n        return await DB.Request('/auth/users/', 'GET', null, LocalStorage.GetToken());\r\n    }\r\n\r\n    static async PostUserdata(obj) {\r\n        // await DB.CheckToken();\r\n        return await DB.Request('/auth/users/', 'PUT', obj, LocalStorage.GetToken());\r\n    }\r\n\r\n    static async DeletePoll(link) {\r\n        // await DB.CheckToken();\r\n        return await DB.Request(`${baseURL}/api/polls/${link}/`, 'DELETE', null, LocalStorage.GetToken());\r\n    }\r\n    static async PostPoll(obj) {\r\n        // await DB.CheckToken();\r\n        console.log(LocalStorage.GetToken())\r\n        return await DB.Request(`${baseURL}/api/polls/`, 'POST', obj, LocalStorage.GetToken());\r\n    }\r\n\r\n    static async GetUserPolls() {\r\n        // await DB.CheckToken();\r\n        return await DB.Request(`${baseURL}/api/polls/all/`, 'GET', null, LocalStorage.GetToken());\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    static async CheckToken() {\r\n        let tokenObj = await DB.Request('/auth/token/', 'GET', null, LocalStorage.GetToken());\r\n        if (tokenObj['token'] == null) {\r\n            window.location.replace('/');\r\n            return;\r\n        }\r\n        LocalStorage.SetToken(tokenObj['token']);\r\n    }\r\n    static async Request(url, method = 'GET', bodyObj = null, token = null) {\r\n        \r\n        let result = null;\r\n        let obj = {};\r\n\r\n        obj['method'] = method;\r\n        \r\n        obj['headers'] = {};\r\n        obj['headers']['Content-type'] = 'application/json';\r\n        if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\r\n            \r\n        if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\r\n        \r\n        await fetch(url, obj).then(async (response) => {\r\n            console.log(response)\r\n            if (response.ok)\r\n                await response.json().then(data => {\r\n                    console.log(data);\r\n                    result = data;\r\n                })\r\n            else \r\n                response.text().then(console.log)\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n} \r\n\r\n\r\nexport { PollsDB }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}