{"ast":null,"code":"var _jsxFileName = \"/home/khsdf/tmp/K3/src/reply/Reply.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../styles/fonts.css';\nimport '../styles/layout.css';\nimport '../styles/header.css';\nimport '../styles/sidebar.css';\nimport '../styles/views.css';\nimport { Header } from '../components/Header';\nimport { DB } from './scripts/ApiDB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Reply = props => {\n  _s();\n  const {\n    link\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(ReplyComponent, {\n    link: link\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(Reply, \"1cPkfQu5/6Yclyv8+v49UBFCcD0=\", true);\n_c = Reply;\nclass ReplyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      poll: []\n    };\n    this.props.DB.GetPoll().then(result => {\n      this.setState({\n        userPolls: result\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          id: \"views\",\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            id: \"replyPollView\",\n            children: result.questions.split('|').map((question, i) => {\n              return /*#__PURE__*/_jsxDEV(\"article\", {\n                className: \"question-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"section\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"$\", question]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 10\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"\\u041E\\u0442\\u0432\\u0435\\u0442: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 10\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 10\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 9\n                }, this)]\n              }, ++i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 15\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport { Reply };\nvar _c;\n$RefreshReg$(_c, \"Reply\");","map":{"version":3,"names":["React","Header","DB","jsxDEV","_jsxDEV","Fragment","_Fragment","Reply","props","_s","link","useParams","ReplyComponent","fileName","_jsxFileName","lineNumber","columnNumber","_c","Component","constructor","state","poll","GetPoll","then","result","setState","userPolls","render","children","id","questions","split","map","question","i","className","$RefreshReg$"],"sources":["/home/khsdf/tmp/K3/src/reply/Reply.jsx"],"sourcesContent":["import React from 'react';\nimport '../styles/fonts.css';\nimport '../styles/layout.css';\nimport '../styles/header.css';\nimport '../styles/sidebar.css';\n\nimport '../styles/views.css';\n\nimport { Header } from '../components/Header';\nimport { DB } from './scripts/ApiDB';\n\n\nconst Reply = (props) => { \n\n\tconst { link } = useParams();\n\n\treturn <ReplyComponent link={link}/>\n}\n\n\nclass ReplyComponent extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tpoll: []\n\t\t}\n\n\t\tthis.props.DB.GetPoll().then(result => { \n\t\t\tthis.setState({ userPolls: result })\n\t\t});\n\t}\n\n\trender() {\n\t\treturn <>\n\t\t\t<Header />\n\t\t\t<aside></aside>\n\t\t\t<main>\n\t\t\t\t<article id=\"views\">\n\t\t\t\t\t<section id=\"replyPollView\">\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.questions.split('|').map((question, i) => {\n\t\t\t\t\t\t\treturn <article className=\"question-form\" key={++i}>\n\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t<div>${question}</div>\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\n\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t<div>Ответ: </div>\n\t\t\t\t\t\t\t\t\t<input />\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t</section>\n\t\t\t\t</article>\n\t\t\t</main>\n\t\t</>\n\t}\n}\nexport { Reply };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}