{"ast":null,"code":"// DB.Request(`http://localhost:81/api/polls/public/62696261d09ed0bfd180d0bed18120233131323032332d31322d32345431313a33393a32392e3739345a/`, \n// 'GET', null, LocalDB.GetToken());\n\nimport { ApiLocal } from './ApiLocal';\nconst baseURL = 'http://localhost:8080';\nclass DB {\n  static async GetUserdata() {\n    // await DB.CheckToken();\n    return await DB.Request('/auth/users/', 'GET', null, ApiLocal.GetToken());\n  }\n  static async PostUserdata(obj) {\n    // await DB.CheckToken();\n    return await DB.Request('/auth/users/', 'PUT', obj, ApiLocal.GetToken());\n  }\n  static async DeletePoll(link) {\n    // await DB.CheckToken();\n    return await DB.Request(`/api/polls/${link}/`, 'DELETE', null, ApiLocal.GetToken());\n  }\n  static async PostPoll(obj) {\n    // await DB.CheckToken();\n    console.log(ApiLocal.GetToken());\n    return await DB.Request(`${baseURL}/api/polls/`, 'POST', obj, ApiLocal.GetToken());\n  }\n  static async GetUserPolls() {\n    // await DB.CheckToken();\n    return await DB.Request('/api/polls/all/', 'GET', null, ApiLocal.GetToken());\n  }\n  static async CheckToken() {\n    let tokenObj = await DB.Request('/auth/token/', 'GET', null, ApiLocal.GetToken());\n    if (tokenObj['token'] == null) {\n      window.location.replace('/');\n      return;\n    }\n    ApiLocal.SetToken(tokenObj['token']);\n  }\n  static async Request(url, method = 'GET', bodyObj = null, token = null) {\n    let result = null;\n    let obj = {};\n    obj['method'] = method;\n    obj['headers'] = {};\n    obj['headers']['Content-type'] = 'application/json';\n    if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\n    if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\n    await fetch(url, obj).then(async response => {\n      console.log(response);\n      if (response.ok) await response.json().then(data => {\n        console.log(data);\n        result = data;\n      });else response.text().then(console.log);\n    });\n    return result;\n  }\n}\nexport { DB };","map":{"version":3,"names":["ApiLocal","baseURL","DB","GetUserdata","Request","GetToken","PostUserdata","obj","DeletePoll","link","PostPoll","console","log","GetUserPolls","CheckToken","tokenObj","window","location","replace","SetToken","url","method","bodyObj","token","result","JSON","stringify","fetch","then","response","ok","json","data","text"],"sources":["/home/khsdf/tmp/K3/src/polls/scripts/ApiDB.js"],"sourcesContent":["// DB.Request(`http://localhost:81/api/polls/public/62696261d09ed0bfd180d0bed18120233131323032332d31322d32345431313a33393a32392e3739345a/`, \r\n// 'GET', null, LocalDB.GetToken());\r\n\r\nimport { ApiLocal }  from './ApiLocal';\r\n\r\nconst baseURL = 'http://localhost:8080';\r\n\r\nclass DB {\r\n\r\n    static async GetUserdata() {\r\n        // await DB.CheckToken();\r\n        return await DB.Request('/auth/users/', 'GET', null, ApiLocal.GetToken());\r\n    }\r\n\r\n    static async PostUserdata(obj) {\r\n        // await DB.CheckToken();\r\n        return await DB.Request('/auth/users/', 'PUT', obj, ApiLocal.GetToken());\r\n    }\r\n\r\n    static async DeletePoll(link) {\r\n        // await DB.CheckToken();\r\n        return await DB.Request(`/api/polls/${link}/`, 'DELETE', null, ApiLocal.GetToken());\r\n    }\r\n    static async PostPoll(obj) {\r\n        // await DB.CheckToken();\r\n        console.log(ApiLocal.GetToken())\r\n        return await DB.Request(`${baseURL}/api/polls/`, 'POST', obj, ApiLocal.GetToken());\r\n    }\r\n\r\n    static async GetUserPolls() {\r\n        // await DB.CheckToken();\r\n        return await DB.Request('/api/polls/all/', 'GET', null, ApiLocal.GetToken());\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    static async CheckToken() {\r\n        let tokenObj = await DB.Request('/auth/token/', 'GET', null, ApiLocal.GetToken());\r\n        if (tokenObj['token'] == null) {\r\n            window.location.replace('/');\r\n            return;\r\n        }\r\n        ApiLocal.SetToken(tokenObj['token']);\r\n    }\r\n    static async Request(url, method = 'GET', bodyObj = null, token = null) {\r\n        \r\n        let result = null;\r\n        let obj = {};\r\n\r\n        obj['method'] = method;\r\n        \r\n        obj['headers'] = {};\r\n        obj['headers']['Content-type'] = 'application/json';\r\n        if (token) obj['headers']['Authorization'] = `Bearer ${token}`;\r\n            \r\n        if (bodyObj) obj['body'] = JSON.stringify(bodyObj);\r\n        \r\n        await fetch(url, obj).then(async (response) => {\r\n            console.log(response)\r\n            if (response.ok)\r\n                await response.json().then(data => {\r\n                    console.log(data);\r\n                    result = data;\r\n                })\r\n            else \r\n                response.text().then(console.log)\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n} \r\n\r\n\r\nexport { DB }"],"mappings":"AAAA;AACA;;AAEA,SAASA,QAAQ,QAAS,YAAY;AAEtC,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,EAAE,CAAC;EAEL,aAAaC,WAAWA,CAAA,EAAG;IACvB;IACA,OAAO,MAAMD,EAAE,CAACE,OAAO,CAAC,cAAc,EAAE,KAAK,EAAE,IAAI,EAAEJ,QAAQ,CAACK,QAAQ,CAAC,CAAC,CAAC;EAC7E;EAEA,aAAaC,YAAYA,CAACC,GAAG,EAAE;IAC3B;IACA,OAAO,MAAML,EAAE,CAACE,OAAO,CAAC,cAAc,EAAE,KAAK,EAAEG,GAAG,EAAEP,QAAQ,CAACK,QAAQ,CAAC,CAAC,CAAC;EAC5E;EAEA,aAAaG,UAAUA,CAACC,IAAI,EAAE;IAC1B;IACA,OAAO,MAAMP,EAAE,CAACE,OAAO,CAAE,cAAaK,IAAK,GAAE,EAAE,QAAQ,EAAE,IAAI,EAAET,QAAQ,CAACK,QAAQ,CAAC,CAAC,CAAC;EACvF;EACA,aAAaK,QAAQA,CAACH,GAAG,EAAE;IACvB;IACAI,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAACK,QAAQ,CAAC,CAAC,CAAC;IAChC,OAAO,MAAMH,EAAE,CAACE,OAAO,CAAE,GAAEH,OAAQ,aAAY,EAAE,MAAM,EAAEM,GAAG,EAAEP,QAAQ,CAACK,QAAQ,CAAC,CAAC,CAAC;EACtF;EAEA,aAAaQ,YAAYA,CAAA,EAAG;IACxB;IACA,OAAO,MAAMX,EAAE,CAACE,OAAO,CAAC,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAEJ,QAAQ,CAACK,QAAQ,CAAC,CAAC,CAAC;EAChF;EAMA,aAAaS,UAAUA,CAAA,EAAG;IACtB,IAAIC,QAAQ,GAAG,MAAMb,EAAE,CAACE,OAAO,CAAC,cAAc,EAAE,KAAK,EAAE,IAAI,EAAEJ,QAAQ,CAACK,QAAQ,CAAC,CAAC,CAAC;IACjF,IAAIU,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;MAC3BC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,GAAG,CAAC;MAC5B;IACJ;IACAlB,QAAQ,CAACmB,QAAQ,CAACJ,QAAQ,CAAC,OAAO,CAAC,CAAC;EACxC;EACA,aAAaX,OAAOA,CAACgB,GAAG,EAAEC,MAAM,GAAG,KAAK,EAAEC,OAAO,GAAG,IAAI,EAAEC,KAAK,GAAG,IAAI,EAAE;IAEpE,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAIjB,GAAG,GAAG,CAAC,CAAC;IAEZA,GAAG,CAAC,QAAQ,CAAC,GAAGc,MAAM;IAEtBd,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACnBA,GAAG,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,GAAG,kBAAkB;IACnD,IAAIgB,KAAK,EAAEhB,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,CAAC,GAAI,UAASgB,KAAM,EAAC;IAE9D,IAAID,OAAO,EAAEf,GAAG,CAAC,MAAM,CAAC,GAAGkB,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;IAElD,MAAMK,KAAK,CAACP,GAAG,EAAEb,GAAG,CAAC,CAACqB,IAAI,CAAC,MAAOC,QAAQ,IAAK;MAC3ClB,OAAO,CAACC,GAAG,CAACiB,QAAQ,CAAC;MACrB,IAAIA,QAAQ,CAACC,EAAE,EACX,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAACI,IAAI,IAAI;QAC/BrB,OAAO,CAACC,GAAG,CAACoB,IAAI,CAAC;QACjBR,MAAM,GAAGQ,IAAI;MACjB,CAAC,CAAC,MAEFH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACL,IAAI,CAACjB,OAAO,CAACC,GAAG,CAAC;IACzC,CAAC,CAAC;IAEF,OAAOY,MAAM;EACjB;AAEJ;AAGA,SAAStB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}