{"ast":null,"code":"var _jsxFileName = \"/home/khsdf/tmp/K3/src/reply/ReplyByLink.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReplyDB } from '../hooks/ReplyDB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ReplyByLink() {\n  _s();\n  // üëáÔ∏è Get the ID from the URL\n  const {\n    link\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(ReplyComponent, {\n    link: link\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n}\n_s(ReplyByLink, \"1cPkfQu5/6Yclyv8+v49UBFCcD0=\", false, function () {\n  return [useParams];\n});\n_c = ReplyByLink;\nclass ReplyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      poll: []\n    };\n    ReplyDB.GetPoll(this.props.link).then(result => {\n      this.setState({\n        poll: result\n      });\n    });\n  }\n  render() {\n    let questions = '';\n    if (this.state.poll && this.state.poll.questions) questions = this.state.poll.questions;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"replyPollView\",\n      children: [questions.split('|').map((question, i) => {\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"question-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\u041E\\u0442\\u0432\\u0435\\u0442: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 7\n          }, this)]\n        }, ++i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this);\n      }) || /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"postReplyBtn\",\n        onClick: () => {\n          let answers = '';\n          let $answers = document.getElementsByTagName('input');\n          for (let i = 0; i < $answers.length; i++) answers += $answers[i].value + '|';\n          answers = answers.replace(/(\\|)$/g, '');\n          let replyObj = {\n            pollLink: this.props.link,\n            answers: answers\n          };\n          ReplyDB.PostReply(replyObj).then(result => {\n            this.props.ShowReplyView(result['link']);\n          });\n        },\n        children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this);\n  }\n}\nexport { ReplyByLink };\nvar _c;\n$RefreshReg$(_c, \"ReplyByLink\");","map":{"version":3,"names":["React","useParams","ReplyDB","jsxDEV","_jsxDEV","Fragment","_Fragment","ReplyByLink","_s","link","ReplyComponent","fileName","_jsxFileName","lineNumber","columnNumber","_c","Component","constructor","props","state","poll","GetPoll","then","result","setState","render","questions","id","children","split","map","question","i","className","onClick","answers","$answers","document","getElementsByTagName","length","value","replace","replyObj","pollLink","PostReply","ShowReplyView","$RefreshReg$"],"sources":["/home/khsdf/tmp/K3/src/reply/ReplyByLink.jsx"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReplyDB } from '../hooks/ReplyDB';\n\n\nfunction ReplyByLink() {\n    // üëáÔ∏è Get the ID from the URL\n    const { link } = useParams();\n    \n    return <ReplyComponent link={link} />\n  }\n  \n\nclass ReplyComponent extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tpoll: []\n\t\t}\n\n\t\tReplyDB.GetPoll(this.props.link).then(result => {\n\t\t\tthis.setState({ poll: result })\n\t\t});\n\t}\n\n\trender() {\n\t\tlet questions = '';\n\t\tif (this.state.poll && this.state.poll.questions)\n\t\t\tquestions = this.state.poll.questions;\n\t\treturn <section id=\"replyPollView\">\n\t\t\t{\n\t\t\t\tquestions.split('|').map((question, i) => {\n\t\t\t\t\treturn <article className=\"question-form\" key={++i}>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<div>{question}</div>\n\t\t\t\t\t\t</section>\n\t\t\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<div>–û—Ç–≤–µ—Ç: </div>\n\t\t\t\t\t\t\t<input />\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</article>\n\t\t\t\t}) || <></>\n\t\t\t}\n\t\t\t<button id=\"postReplyBtn\" onClick={() => {\n\t\t\t\tlet answers = '';\n\n\t\t\t\tlet $answers = document.getElementsByTagName('input');\n\t\t\t\tfor (let i = 0; i < $answers.length; i++)\n\t\t\t\t\tanswers += $answers[i].value + '|';\n\n\t\t\t\tanswers = answers.replace(/(\\|)$/g, '');\n\t\t\n\t\t\t\tlet replyObj = {\n\t\t\t\t\tpollLink: this.props.link,\n\t\t\t\t\tanswers: answers\n\t\t\t\t};\n\t\t\n\t\t\t\tReplyDB.PostReply(replyObj).then(result => {\n\t\t\t\t\tthis.props.ShowReplyView(result['link']);\n\t\t\t\t});\n\t\t\t}}>–ó–∞–≤–µ—Ä—à–∏—Ç—å</button>\n\t\t</section>\n\t}\n}\nexport { ReplyByLink };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}