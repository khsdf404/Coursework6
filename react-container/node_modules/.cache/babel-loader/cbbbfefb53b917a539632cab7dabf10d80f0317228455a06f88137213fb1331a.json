{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khsdf\\\\Desktop\\\\\\u0420\\u041A\\u0421\\u041F + \\u041A\\\\rksp\\\\pr1\\\\src\\\\authorize\\\\AuthButton.js\";\nimport React from 'react';\nimport './styles/auth-button.css';\nimport { $jsf } from './scripts/JSF';\nimport { LocalDB } from './scripts/LocalDB';\nimport { DB } from './scripts/DB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AuthButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputs = {};\n  }\n  componentDidMount() {\n    this.inputs['name'] = $jsf(`#username`);\n    this.inputs['password'] = $jsf(`#password`);\n    this.inputs['email'] = $jsf(`#email`);\n    this.inputs['phone'] = $jsf(`#phone`);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"authorization-confirm\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async e => {\n          let user = {\n            login: this.inputs['name'].value(),\n            password: this.inputs['password'].value(),\n            email: $emailInput.get() && $emailInput.value() || null,\n            phone: $phoneInput.get() && $phoneInput.value() || null\n          };\n          console.log(user);\n          console.log(e.target.innerText());\n          return;\n          let responseData;\n\n          // if (this.state.showRegFields)\n          // \tresponseData = await DB.Registry(user);\n          // else\n          // \tresponseData = await DB.Login(user);\n\n          // if (responseData != null) {\n          // \tLocalDB.SetToken(responseData['token']);\n\n          // \tif (responseData['role'] == 'ROLE_USER')\n          // \t\twindow.location.replace('/mypolls/')\n          // }\n        },\n        children: this.props.showRegFields ? 'CREATE ACCOUNT' : 'CONTINUE'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this);\n  }\n}\nexport { AuthButton };","map":{"version":3,"names":["React","$jsf","LocalDB","DB","jsxDEV","_jsxDEV","AuthButton","Component","constructor","props","inputs","componentDidMount","render","className","children","onClick","e","user","login","value","password","email","$emailInput","get","phone","$phoneInput","console","log","target","innerText","responseData","showRegFields","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/khsdf/Desktop/РКСП + К/rksp/pr1/src/authorize/AuthButton.js"],"sourcesContent":["import React from 'react';\r\nimport './styles/auth-button.css';\r\nimport { $jsf } from './scripts/JSF';\r\nimport { LocalDB } from './scripts/LocalDB';\r\nimport { DB } from './scripts/DB';\r\n\r\n\r\nclass AuthButton extends React.Component {\r\n\r\n    inputs = {};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n    componentDidMount() {\r\n        this.inputs['name'] = $jsf(`#username`);\r\n        this.inputs['password'] = $jsf(`#password`);\r\n        this.inputs['email'] = $jsf(`#email`);\r\n        this.inputs['phone'] = $jsf(`#phone`);\r\n    }\r\n\r\n\trender() { \r\n\t\treturn <section className=\"authorization-confirm\">\r\n            <button onClick={async (e) => {                \r\n                let user = {\r\n                    login: this.inputs['name'].value(),\r\n                    password: this.inputs['password'].value(),\r\n                    email: $emailInput.get() && $emailInput.value() || null,\r\n                    phone: $phoneInput.get() && $phoneInput.value() || null\r\n                }\r\n\r\n                console.log(user)\r\n                console.log(e.target.innerText())\r\n                return; \r\n                let responseData;\r\n        \r\n                // if (this.state.showRegFields)\r\n                // \tresponseData = await DB.Registry(user);\r\n                // else\r\n                // \tresponseData = await DB.Login(user);\r\n        \r\n        \r\n                // if (responseData != null) {\r\n                // \tLocalDB.SetToken(responseData['token']);\r\n                    \r\n                // \tif (responseData['role'] == 'ROLE_USER')\r\n                // \t\twindow.location.replace('/mypolls/')\r\n                // }\r\n            }}>{this.props.showRegFields ? 'CREATE ACCOUNT' : 'CONTINUE'}</button>\r\n        </section>\r\n\t}\r\n}\r\nexport { AuthButton };\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AACjC,SAASC,IAAI,QAAQ,eAAe;AACpC,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,EAAE,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,UAAU,SAASN,KAAK,CAACO,SAAS,CAAC;EAIxCC,WAAWA,CAACC,KAAK,EAAE;IAClB,KAAK,CAACA,KAAK,CAAC;IAAC,KAHXC,MAAM,GAAG,CAAC,CAAC;EAId;EAEGC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACD,MAAM,CAAC,MAAM,CAAC,GAAGT,IAAI,CAAE,WAAU,CAAC;IACvC,IAAI,CAACS,MAAM,CAAC,UAAU,CAAC,GAAGT,IAAI,CAAE,WAAU,CAAC;IAC3C,IAAI,CAACS,MAAM,CAAC,OAAO,CAAC,GAAGT,IAAI,CAAE,QAAO,CAAC;IACrC,IAAI,CAACS,MAAM,CAAC,OAAO,CAAC,GAAGT,IAAI,CAAE,QAAO,CAAC;EACzC;EAEHW,MAAMA,CAAA,EAAG;IACR,oBAAOP,OAAA;MAASQ,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eACvCT,OAAA;QAAQU,OAAO,EAAE,MAAOC,CAAC,IAAK;UAC1B,IAAIC,IAAI,GAAG;YACPC,KAAK,EAAE,IAAI,CAACR,MAAM,CAAC,MAAM,CAAC,CAACS,KAAK,CAAC,CAAC;YAClCC,QAAQ,EAAE,IAAI,CAACV,MAAM,CAAC,UAAU,CAAC,CAACS,KAAK,CAAC,CAAC;YACzCE,KAAK,EAAEC,WAAW,CAACC,GAAG,CAAC,CAAC,IAAID,WAAW,CAACH,KAAK,CAAC,CAAC,IAAI,IAAI;YACvDK,KAAK,EAAEC,WAAW,CAACF,GAAG,CAAC,CAAC,IAAIE,WAAW,CAACN,KAAK,CAAC,CAAC,IAAI;UACvD,CAAC;UAEDO,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;UACjBS,OAAO,CAACC,GAAG,CAACX,CAAC,CAACY,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC;UACjC;UACA,IAAIC,YAAY;;UAEhB;UACA;UACA;UACA;;UAGA;UACA;;UAEA;UACA;UACA;QACJ,CAAE;QAAAhB,QAAA,EAAE,IAAI,CAACL,KAAK,CAACsB,aAAa,GAAG,gBAAgB,GAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC;EACjB;AACD;AACA,SAAS7B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}